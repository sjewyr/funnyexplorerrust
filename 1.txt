   Compiling funnyexplorerrust v0.1.0 (/home/sjewyr/funnyexplorerrust)
warning: unused import: `self`
 --> src/lib.rs:2:44
  |
2 |     cell::RefCell, env, fs::{self}, path::{self, Path}, rc::Rc
  |                                            ^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: variable does not need to be mutable
  --> src/lib.rs:48:13
   |
48 |         let mut path2 = Rc::new(RefCell::new(String::new()));
   |             ----^^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> src/lib.rs:49:13
   |
49 |         let mut path = Rc::new(RefCell::new(String::new()));
   |             ----^^^^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
  --> src/lib.rs:50:13
   |
50 |         let mut selected_path = Rc::clone(&path2);
   |             ----^^^^^^^^^^^^^
   |             |
   |             help: remove this `mut`

warning: `funnyexplorerrust` (lib) generated 4 warnings (run `cargo fix --lib -p funnyexplorerrust` to apply 4 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.66s
     Running `target/debug/funnyexplorerrust`
thread 'main' panicked at src/lib.rs:78:70:
already mutably borrowed: BorrowError
stack backtrace:
   0: rust_begin_unwind
             at /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/std/src/panicking.rs:665:5
   1: core::panicking::panic_fmt
             at /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/panicking.rs:74:14
   2: core::cell::panic_already_mutably_borrowed
             at /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/cell.rs:793:5
   3: core::cell::RefCell<T>::borrow
             at /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/cell.rs:980:25
   4: funnyexplorerrust::MyState::update_dir
             at ./src/lib.rs:78:48
   5: funnyexplorerrust::MyState::new
             at ./src/lib.rs:62:9
   6: funnyexplorerrust::run
             at ./src/lib.rs:110:24
   7: funnyexplorerrust::main
             at ./src/main.rs:5:5
   8: core::ops::function::FnOnce::call_once
             at /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/ops/function.rs:250:5
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
